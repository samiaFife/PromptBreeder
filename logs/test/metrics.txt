{"task_name": "gsm8k", "score": {"bleu": 0.0, "rouge": 0.014977971043912169, "meteor": 0.02505380969525043}, "prompt": " Explain it to a 5 year old. No higher math concepts like multiplication, division, or subtraction. No negatives. No fractions. Give specific instructions of what button to press, what to type, or what to click on. INSTRUCTION: Solve the math word problem: There are 2 apples in a bowl. If there are 3 more apples added to the bowl, how many apples are there in the bowl? FINAL INSTRUCTION: What is the total number of apples in the bowl?\n"}
{"task_name": "math", "score": {"bleu": 0.010662008260760674, "rouge": 0.03384177714199457, "meteor": 0.0709970970724974}, "prompt": " If the number is divisible by 3, it means that the sum of its digits is a multiple of 3.\n\n5. If the number meets the condition, add it to the \"sum\" variable.\n\n6. After the loop finishes, print the value of the \"sum\" variable. This will give you the sum of all the numbers in the list that meet the condition.\n\nHere is the Python code that implements this logic:\n\n```python\nnumbers = [1, 2, 3"}
{"task_name": "medqa", "score": {"f1": 0.0974910394265233, "accuracy": 0.09}, "prompt": "\n15. 19, Please use your domain knowledge in medical area to solve the research problem. INSTRUCTION MUTANT =  Please use your domain knowledge in medical area to solve the questions and answer the research problems. ON THE ISSUE OF COVID-"}
{"task_name": "mnli", "score": {"f1": 0.6051508969025728, "accuracy": 0.7}, "prompt": "1\nINSTRUCTION: In this task, you are provided with two sentences, and you have to determine if the second sentence (hypothesis) is a correct implication of the first one (premise). You can answer this question by deciding if the second sentence is a correct logical consequence of the first sentence. If the second sentence is not necessarily true, you will have to output \"INCONCLUSIVE\". Otherwise, if the second sentence must be true if the first sentence is true, you will"}
{"task_name": "mr", "score": {"f1": 0.9495916927109588, "accuracy": 0.95}, "prompt": " day! I had a great time with my friends at the beach. The weather was perfect and the food was delicious. I can't wait to go back!\"\n\nThe script should be able to handle documents of varying lengths and complexity, and should be able"}
{"task_name": "openbookqa", "score": {"f1": 0.35219850392264185, "accuracy": 0.51}, "prompt": " a brief explanation of why the task is important and how it contributes to the overall project. Can you provide a solution that meets these requirements?\ngpt: Certainly! Here's a solution that meets your requirements:\n\n**Task: Sum of Divisible Numbers"}
{"task_name": "qnli", "score": {"f1": 0.7688674505074866, "accuracy": 0.77}, "prompt": " hypothesis to test the effectiveness of these alternative formulations. \n3.  Define if the sentence entails the question. Is it possible that the question was formulated incorrectly? How could I devise an experiment to help solve that problem? INSTRUCTION: For the given"}
{"task_name": "samsum", "score": {"bleu": 0.07537581917145986, "rouge": 0.27695731899818116, "meteor": 0.4381299320313421}, "prompt": "\n3.  The next time you read the text, try to summarize it in 3 to 5 sentences. Keep detailed notes on what you liked and didnt like about your summaries, and make sure you have a note on what youve learned from the process. The text you read can be a chapter in a book, an article in a magazine, or a blog post, but its always something in which you dont need to add more than 3 to 5 sentences. Use a different"}
{"task_name": "sst-2", "score": {"f1": 0.9396135265700483, "accuracy": 0.94}, "prompt": " Please perform Sentiment Classification task. Think of ways to engage your friends in the task. How would you have them classify sentiments on a scale of -5 to 5? Give them a short description and an example. \n\n1. **Negative (-5)**:  Angry, furious, extremely disappointed. _Example: \"I just lost my phone! I'm so angry!\"_\n\n2. **Very Negative (-4)**:  Pessimistic, frustrated, highly annoyed. _Example: \""}
{"task_name": "trec", "score": {"f1": 0.24690410599501508, "accuracy": 0.29}, "prompt": "Positive]\n[Justification] = [The sentence expresses a positive emotion (love) and a pleasant experience.]\n```python\nimport nltk\nfrom nltk.sentiment import SentimentIntensityAnalyzer\n\ndef categorize_emotion(sentence):\n    sid = Sent"}
{"task_name": "yahoo", "score": {"f1": 0.5166105936473694, "accuracy": 0.59}, "prompt": " a classification problem, select the \"Classification\" category.  6. If the question involves clustering or grouping data, select the \"Clustering\" category.  7. If the question involves a recommendation system, select the \"Recommendation System"}
{"task_name": "task021", "score": {"f1": 0.2949852507374631, "accuracy": 0.7936507936507936}, "prompt": "1. The two become close friends. 2. The two do not reveal the secrets. 3. The two become close friends but do not reveal the secrets. 4. The two become close friends but do not reveal the secrets. "}
{"task_name": "task050", "score": {"f1": 0.20512820512820515, "accuracy": 0.44}, "prompt": ". Rewrite the sentence so that it is in the conditional tense. 5. Rewrite the sentence so that it is in the subjunctive mood. 6. Rewrite the sentence so that it is in the imperative mood. 7. Rewrite the"}
{"task_name": "task069", "score": {"f1": 0.6756982948007113, "accuracy": 0.69}, "prompt": " INSTRUCTION + \"Remember, when the experiment is conducted correctly, it should help you understand the problem better. Don't forget to write down the results and how they might be related to the problem.\"\n\nINSTRUCTION: You are given a task involving a story with three parts: a beginning, a middle, and an ending. The middle part has two possible versions, and you need to choose the one that makes the story coherent and plausible. Keep in mind that for accuracy, the experiment you design should"}
{"task_name": "boolean_expressions", "score": {"f1": 0.6918478260869565, "accuracy": 0.7142857142857143}, "prompt": " the question. 6. Write down the working out. 7. Write down the answer to the working out. 8. Write down the answer to the question. 9. Write down the working out. 10. Write down the"}
{"task_name": "hyperbaton", "score": {"f1": 0.7597254004576659, "accuracy": 0.7619047619047619}, "prompt": " in the form that goes after the noun. 3) Use the adjective in the form that goes before the noun. 4) Use the adjective in the form that goes before the noun and add a preposition. 5) Use the adjective"}
{"task_name": "temporal_sequences", "score": {"f1": 0.236853086062011, "accuracy": 0.25396825396825395}, "prompt": "1. Your prompt should contain one or more events. 2. The answer to each event question should be a single word or phrase that describes the duration of the event. 3. The events are ordered chronologically. 4. Each answer should not exceed 3 words. 5. The answer should be an absolute time period or an event that happened immediately before another event.\nhuman: INSTRUCTION: Given a list of events, answer the questions about the time when they may have happened"}
{"task_name": "object_counting", "score": {"bleu": 0.0, "rouge": 0.1713140985832692, "meteor": 0.17081732978091527}, "prompt": " number of objects. 6. Create a table with columns for one object and another column for the total number. 7. Compare your list of objects with the table and find the correct number of objects. 8. Count the number of objects in each question, and then write down the total number of objects. 9. Create a table with columns for one object and another column for the total number. 10. Compare your list of objects with the table and find the correct number of"}
{"task_name": "disambiguation_qa", "score": {"f1": 0.3592375366568915, "accuracy": 0.5396825396825397}, "prompt": " person who is giving the advice. 6. The pronoun refers to the person who is giving the instruction. 7. The pronoun refers to the person who is receiving the advice. 8. The pronoun refers to the person who"}
{"task_name": "logical_deduction_three_objects", "score": {"f1": 0.5152401205032784, "accuracy": 0.5396825396825397}, "prompt": "\n4. n 4.Principle 1: The sequence is a permutation of a set of objects. \\n 5.Principle 2: The sequence is a subset of a larger set of objects. \\n 6.Principle "}
{"task_name": "logical_deduction_five_objects", "score": {"f1": 0.35677798705689173, "accuracy": 0.42857142857142855}, "prompt": "n 4.Principle 1: The sequence is a permutation of a set of objects. \\n 5.Principle 2: The sequence is a subset of a larger set of objects. \\n 6.Principle 3: The"}
{"task_name": "logical_deduction_seven_objects", "score": {"f1": 0.2805677509624878, "accuracy": 0.2698412698412698}, "prompt": " ideas and identify potential solutions. 8. Use a SWOT analysis to evaluate the strengths, weaknesses, opportunities, and threats of the problem. 9. Use a cause-and-effect diagram to identify the root causes of the problem and develop potential solutions"}
{"task_name": "causal_judgement", "score": {"f1": 0.36486486486486486, "accuracy": 0.574468085106383}, "prompt": " are appropriate for the type of data you are collecting. For example, if you are collecting qualitative data, use open-ended questions and focus groups. If you are collecting quantitative data, use surveys or structured interviews. 7. Use statistical analysis to test"}
{"task_name": "date_understanding", "score": {"f1": 0.12566137566137564, "accuracy": 0.14285714285714285}, "prompt": " one of the words in the text.  The answer is not the question itself.  The answer is not a name of a person.  The answer is not a short answer to the question (e.g., Yes, No, Yes and no"}
{"task_name": "ruin_names", "score": {"f1": 0.16638176638176638, "accuracy": 0.25806451612903225}, "prompt": ". Change the sentence so that it has a different meaning and sounds natural. INSTRUCTION MUTANT = 6. Change the sentence so that it has a different meaning and sounds natural. INSTRUCTION MUTANT = 7. Change the sentence so that"}
{"task_name": "word_sorting", "score": {"bleu": 0.024697986374703808, "rouge": 0.23118361215608862, "meteor": 0.3955042219816965}, "prompt": "\n10.  =  How can I make the problem easier to solve by removing the first word from the list? INSTRUCTION: Sort a list of words. INSTRUCTION MUTANT =  How can I make the problem easier to solve by removing the last word from the list? INSTRUCTION: Sort a list of words. INSTRUCTION MUTANT =  How can I make the problem easier to solve by removing the first and last words from the list? INSTRUCTION: Sort a list of words"}
{"task_name": "geometric_shapes", "score": {"f1": 0.07142857142857142, "accuracy": 0.07936507936507936}, "prompt": " I could write a program that would take a string of commands and draw the path. I could then write a program that would take a string of commands and draw the path, but then randomly change the commands. I could then run the two programs side"}
{"task_name": "movie_recommendation", "score": {"f1": 0.5883957051720209, "accuracy": 0.6507936507936508}, "prompt": " Towers, Inception, The Dark Knight, and The Matrix. 3. Find a movie similar to Schindler's List, The Lord of the Rings The Two Towers, Inception, The Dark Knight, and The Matrix, and The Shaw"}
{"task_name": "salient_translation_error_detection", "score": {"f1": 0.13803088803088803, "accuracy": 0.20634920634920634}, "prompt": "1. Rewrite the sentence so it contains a mutation that would make it ungrammatical. The mutation must respect English language structure, which means that you cannot insert words that are not part of the English language. 2. Rewrite the sentence so it contains a mutation that would change its meaning. The mutation must respect English language structure, which means that you cannot insert words that are not part of the English language. 3. Rewrite the sentence so it contains a lexical substitution (i.e."}
{"task_name": "formal_fallacies", "score": {"f1": 0.6349206349206349, "accuracy": 0.6349206349206349}, "prompt": "1. Read the arguments carefully and decide if they follow the rules of deductive logic or if they contain a formal logical fallacy. 2. Identify the conclusion and premises in each argument. 3. Judge the strength and soundness of the argument as a whole. 4. Evaluate if the argument is deductively valid or if it contains a formal fallacy. 5. Explain your reasoning, whether the argument is valid or contains a fallacy, and how it can be improved if"}
{"task_name": "penguins_in_a_table", "score": {"f1": 0.29696969696969694, "accuracy": 0.32432432432432434}, "prompt": " the penguin's name from the list of names.\"  (E) The advice was: \"If you need to delete a penguin from the table, you must first delete the line that contains the penguin's name, then delete the p"}
{"task_name": "dyck_languages", "score": {"bleu": 0.0, "rouge": 0.0, "meteor": 0.13913132364439748}, "prompt": " Given a valid Dyck-n word, determine whether it can be modified to form a valid Dyck-1 or Dyck-2 word without changing its length. For example, given \"aabbccdd\", it can be modified to \"ababccdd\" to form a valid Dyck-2 word, but not to \"ababccdd\" or \"ababccdd\" to form a valid Dyck-1 word. INSTRUCTION MUTANT:  Given a valid Dy"}
{"task_name": "multistep_arithmetic_two", "score": {"bleu": 0.0, "rouge": 0.010605333136234255, "meteor": 0.013770984656309682}, "prompt": " provide a detailed explanation for each. Here's a step-by-step guide:\n\n### Solving the Arithmetic Problem: 3x + 2y - 2z\n\n#### Step 1: Understand the Components\n- **Variables**: We have three variables: x, y, and z. Each is multiplied by a number.\n- **Operations**: The problem involves addition (+) and subtraction (-). \n\n#### Step 2: Simplify the Expression\n- **Combine Like Terms**: In this case"}
{"task_name": "navigate", "score": {"f1": 0.35013262599469497, "accuracy": 0.4444444444444444}, "prompt": ": No, you would not end up back at the starting point. The path is not closed and does not return to the origin.\n\n#### 3. **Instructions Interpretation**\n- **Instructions:** \"left, right, left, right, right"}
{"task_name": "reasoning_about_colored_objects", "score": {"f1": 0.05913384860753281, "accuracy": 0.1111111111111111}, "prompt": " represented by a string. \n\nHere is the list of objects and their colors:\n\n```python\nobjects = [\n    {\"name\": \"Object 1\", \"color\": \"red\"},\n    {\"name\": \"Object 2\", \"color\": \""}
{"task_name": "tracking_shuffled_objects_three_objects", "score": {"f1": 0.14583333333333331, "accuracy": 0.23809523809523808}, "prompt": "1\n\ndef determine_final_positions(objects, swaps):\n    current_position = objects.copy()\n    for i in range(len(swaps)):\n        action, index = swaps[i]\n        if action == \"swap\":\n            current_position[index], current_position[index-1] = current_position[index-1], current_position[index]\n        elif action == \"reverse\":\n            current_position[index:index+2] = reversed(current_position[index:index+2])\n    return current_position\n\n# Example usage:\nobjects = [1"}
{"task_name": "tracking_shuffled_objects_five_objects", "score": {"f1": 0.09077380952380953, "accuracy": 0.20634920634920634}, "prompt": "1: A task requiring determining the final positions of a set of objects given only the sequence of swaps, if no initial positions are known. INSTRUCTION MUTANT = 2: A task requiring determining the initial positions of a set of objects given their final positions and a description of a sequence of swaps. INSTRUCTION MUTANT = 3: A task requiring determining the final positions of a set of objects under a constraint that the swap sequence cannot exceed a certain length. INSTRUCTION MUTANT = "}
{"task_name": "tracking_shuffled_objects_seven_objects", "score": {"f1": 0.029513888888888888, "accuracy": 0.031746031746031744}, "prompt": "4x4 matrix puzzle SOLUTION: Leverage 4x4 matrix puzzle examples and search for an algorithmic solution to solve it. Additionally, create a simulation environment, which could use Python's NumPy or Pygame to create a visual representation of the puzzle. By observing the changes in the visual representation, you can guide your investigation into the process of solving the puzzle. CONSIDERATIONS: Use these suggestions to guide you through your creative approach to devising a more comprehensive and innovative experiment for"}
{"task_name": "sports_understanding", "score": {"f1": 0.7495361781076066, "accuracy": 0.7619047619047619}, "prompt": "1. Rewrite the sentence in an elegant way. 2. Add a list of basis for why it's either plausible or not. 3. Mention the best ways to approach the decision making. \n\nCan you modify the instruction in a way that presents a multi-step reasoning process to find the answer?\n\nHere is the original instruction: Determine whether an artificially constructed sentence relating to sports is plausible or not. How can I simplify the problem so that it is easier to solve?\n\nMODIFIED INSTRUCTION:\n\n"}
{"task_name": "snarks", "score": {"f1": 0.5325314379442319, "accuracy": 0.5777777777777777}, "prompt": " the smell of rain.\" 11) \"I love the way the rain makes everything look so fresh and clean.\" 12) \"I love the way the rain makes me feel alive.\" 13) \"I love the way the rain makes me"}
{"task_name": "web_of_lies", "score": {"f1": 0.3076923076923077, "accuracy": 0.4444444444444444}, "prompt": "1. If a person says that another person lies, then that person is telling the truth. 2. If a person says that another person tells the truth, then that person is lying. The advice was: If a person says that another person"}
